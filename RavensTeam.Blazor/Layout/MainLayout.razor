@using System.Net.Http.Headers
@using System.Text.Json
@using Blazored.LocalStorage
@using RavensTeam.Blazor.Interop
@using RavensTeam.Blazor.Models
@inherits LayoutComponentBase
<div>
    <FluentLayout>
        <FluentHeader>@_streamerName's Teams
        </FluentHeader>
        <FluentStack Class="body-stack" Orientation="Orientation.Horizontal" Width="100%" HorizontalGap="0">
            <FluentBodyContent Id="body-content" Style="height: calc(100dvh - 90px);">
                @Body
                <FluentToastProvider MaxToastCount="10" />
                <FluentDialogProvider />
                <FluentTooltipProvider />
                <FluentKeyCodeProvider />
                <FluentMenuProvider />
            </FluentBodyContent>
        </FluentStack>
        <FluentFooter Style="@("height: 40px; color: white;  font-size: var(--type-ramp-minus-1-font-size); line-height: var(--type-ramp-base-line-height);")">
            <FluentSpacer />
            <FluentLabel Typo="Typography.H5">Stream Team: @_streamTeam</FluentLabel>
            <FluentSpacer />
        </FluentFooter>
    </FluentLayout>
</div>
@code
{
    [Inject] private ILogger<MainLayout> Logger { get; init; } = default!;
    [Inject] private ISyncLocalStorageService LocalStorage { get; init; } = default!;
    [Inject] private IHelixService HelixService { get; init; } = default!;
    [Inject] private IHttpClientFactory HttpClientFactory { get; init; } = default!;
    private string _streamerName = String.Empty;
    private string _streamTeam = String.Empty;
    private TwitchAuthResponse? _authResponse;

    protected override void OnInitialized()
    {
        Logger.LogInformation("MainLayout initialized");
        _authResponse = HelixService.RetrieveTwitchAuthResponse();
        if (_authResponse is null || LocalStorage.ContainKey("broadcasterId")) return;

        var broadcasterId = LocalStorage.GetItemAsString("broadcasterId");
        var channelInfo = HelixService.GetChannelInfo(broadcasterId);
        _streamerName = channelInfo?.BroadcasterName ?? String.Empty;
        var teamInfo = HelixService.GetStreamTeamInfo(_authResponse.ChannelId);
        _streamTeam = teamInfo?.FirstOrDefault()?.TeamDisplayName ?? String.Empty;
    }
}
